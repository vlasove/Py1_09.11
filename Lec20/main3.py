"""
С одной стороы существует локализация видимостей переменных
С другой стороны есть вот это. Функция - как примитивный объект (можно присвоит ьв переменную, поместить в список, имеет свой тип)
"""
def add(a:int, b:int):
    """
    """
    return a + b 

def sub(a:int, b:int):
    """
    """
    return a - b 

def mult(a:int, b:int):
    """
    """
    return a * b 

q = add # Присвоил переменной значение функции (НЕ РЕЗУЛЬТАТ ВЫЗОВА, А ИМЕННО ФУНКЦИЮ)
print(q(3, 4))

print("Type :", type(sub))

funcs = [add, sub, mult]
for f in funcs:
    print("Func result:", f(2,3)) # Приписать слева круглые скобки с параметрами == вызвать (call)


